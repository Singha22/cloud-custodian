{
    "status_code": 200,
    "data": {
        "TemplateBody": "Description: This stack includes resources needed to deploy AWS CDK apps into this environment\nParameters:\n  TrustedAccounts:\n    Description: List of AWS accounts that are trusted to publish assets and deploy stacks to this environment\n    Default: \"\"\n    Type: CommaDelimitedList\n  TrustedAccountsForLookup:\n    Description: List of AWS accounts that are trusted to look up values in this environment\n    Default: \"\"\n    Type: CommaDelimitedList\n  CloudFormationExecutionPolicies:\n    Description: List of the ManagedPolicy ARN(s) to attach to the CloudFormation deployment role\n    Default: \"\"\n    Type: CommaDelimitedList\n  FileAssetsBucketName:\n    Description: The name of the S3 bucket used for file assets\n    Default: \"\"\n    Type: String\n  FileAssetsBucketKmsKeyId:\n    Description: Empty to create a new key (default), 'AWS_MANAGED_KEY' to use a managed S3 key, or the ID/ARN of an existing key.\n    Default: \"\"\n    Type: String\n  ContainerAssetsRepositoryName:\n    Description: A user-provided custom name to use for the container assets ECR repository\n    Default: \"\"\n    Type: String\n  Qualifier:\n    Description: An identifier to distinguish multiple bootstrap stacks in the same environment\n    Default: hnb659fds\n    Type: String\n    AllowedPattern: \"[A-Za-z0-9_-]{1,10}\"\n    ConstraintDescription: Qualifier must be an alphanumeric identifier of at most 10 characters\n  PublicAccessBlockConfiguration:\n    Description: Whether or not to enable S3 Staging Bucket Public Access Block Configuration\n    Default: \"true\"\n    Type: String\n    AllowedValues:\n      - \"true\"\n      - \"false\"\nConditions:\n  HasTrustedAccounts:\n    Fn::Not:\n      - Fn::Equals:\n          - \"\"\n          - Fn::Join:\n              - \"\"\n              - Ref: TrustedAccounts\n  HasTrustedAccountsForLookup:\n    Fn::Not:\n      - Fn::Equals:\n          - \"\"\n          - Fn::Join:\n              - \"\"\n              - Ref: TrustedAccountsForLookup\n  HasCloudFormationExecutionPolicies:\n    Fn::Not:\n      - Fn::Equals:\n          - \"\"\n          - Fn::Join:\n              - \"\"\n              - Ref: CloudFormationExecutionPolicies\n  HasCustomFileAssetsBucketName:\n    Fn::Not:\n      - Fn::Equals:\n          - \"\"\n          - Ref: FileAssetsBucketName\n  CreateNewKey:\n    Fn::Equals:\n      - \"\"\n      - Ref: FileAssetsBucketKmsKeyId\n  UseAwsManagedKey:\n    Fn::Equals:\n      - AWS_MANAGED_KEY\n      - Ref: FileAssetsBucketKmsKeyId\n  HasCustomContainerAssetsRepositoryName:\n    Fn::Not:\n      - Fn::Equals:\n          - \"\"\n          - Ref: ContainerAssetsRepositoryName\n  UsePublicAccessBlockConfiguration:\n    Fn::Equals:\n      - \"true\"\n      - Ref: PublicAccessBlockConfiguration\nResources:\n  FileAssetsBucketEncryptionKey:\n    Type: AWS::KMS::Key\n    Properties:\n      KeyPolicy:\n        Statement:\n          - Action:\n              - kms:Create*\n              - kms:Describe*\n              - kms:Enable*\n              - kms:List*\n              - kms:Put*\n              - kms:Update*\n              - kms:Revoke*\n              - kms:Disable*\n              - kms:Get*\n              - kms:Delete*\n              - kms:ScheduleKeyDeletion\n              - kms:CancelKeyDeletion\n              - kms:GenerateDataKey\n            Effect: Allow\n            Principal:\n              AWS:\n                Ref: AWS::AccountId\n            Resource: \"*\"\n          - Action:\n              - kms:Decrypt\n              - kms:DescribeKey\n              - kms:Encrypt\n              - kms:ReEncrypt*\n              - kms:GenerateDataKey*\n            Effect: Allow\n            Principal:\n              AWS: \"*\"\n            Resource: \"*\"\n            Condition:\n              StringEquals:\n                kms:CallerAccount:\n                  Ref: AWS::AccountId\n                kms:ViaService:\n                  - Fn::Sub: s3.${AWS::Region}.amazonaws.com\n          - Action:\n              - kms:Decrypt\n              - kms:DescribeKey\n              - kms:Encrypt\n              - kms:ReEncrypt*\n              - kms:GenerateDataKey*\n            Effect: Allow\n            Principal:\n              AWS:\n                Fn::Sub: ${FilePublishingRole.Arn}\n            Resource: \"*\"\n    Condition: CreateNewKey\n  FileAssetsBucketEncryptionKeyAlias:\n    Condition: CreateNewKey\n    Type: AWS::KMS::Alias\n    Properties:\n      AliasName:\n        Fn::Sub: alias/cdk-${Qualifier}-assets-key\n      TargetKeyId:\n        Ref: FileAssetsBucketEncryptionKey\n  StagingBucket:\n    Type: AWS::S3::Bucket\n    Properties:\n      BucketName:\n        Fn::If:\n          - HasCustomFileAssetsBucketName\n          - Fn::Sub: ${FileAssetsBucketName}\n          - Fn::Sub: cdk-${Qualifier}-assets-${AWS::AccountId}-${AWS::Region}\n      AccessControl: Private\n      BucketEncryption:\n        ServerSideEncryptionConfiguration:\n          - ServerSideEncryptionByDefault:\n              SSEAlgorithm: aws:kms\n              KMSMasterKeyID:\n                Fn::If:\n                  - CreateNewKey\n                  - Fn::Sub: ${FileAssetsBucketEncryptionKey.Arn}\n                  - Fn::If:\n                      - UseAwsManagedKey\n                      - Ref: AWS::NoValue\n                      - Fn::Sub: ${FileAssetsBucketKmsKeyId}\n      PublicAccessBlockConfiguration:\n        Fn::If:\n          - UsePublicAccessBlockConfiguration\n          - BlockPublicAcls: true\n            BlockPublicPolicy: true\n            IgnorePublicAcls: true\n            RestrictPublicBuckets: true\n          - Ref: AWS::NoValue\n      VersioningConfiguration:\n        Status: Enabled\n    UpdateReplacePolicy: Retain\n    DeletionPolicy: Retain\n  StagingBucketPolicy:\n    Type: AWS::S3::BucketPolicy\n    Properties:\n      Bucket:\n        Ref: StagingBucket\n      PolicyDocument:\n        Id: AccessControl\n        Version: \"2012-10-17\"\n        Statement:\n          - Sid: AllowSSLRequestsOnly\n            Action: s3:*\n            Effect: Deny\n            Resource:\n              - Fn::Sub: ${StagingBucket.Arn}\n              - Fn::Sub: ${StagingBucket.Arn}/*\n            Condition:\n              Bool:\n                aws:SecureTransport: \"false\"\n            Principal: \"*\"\n  ContainerAssetsRepository:\n    Type: AWS::ECR::Repository\n    Properties:\n      ImageScanningConfiguration:\n        ScanOnPush: true\n      RepositoryName:\n        Fn::If:\n          - HasCustomContainerAssetsRepositoryName\n          - Fn::Sub: ${ContainerAssetsRepositoryName}\n          - Fn::Sub: cdk-${Qualifier}-container-assets-${AWS::AccountId}-${AWS::Region}\n      RepositoryPolicyText:\n        Version: \"2012-10-17\"\n        Statement:\n          - Sid: LambdaECRImageRetrievalPolicy\n            Effect: Allow\n            Principal:\n              Service: lambda.amazonaws.com\n            Action:\n              - ecr:BatchGetImage\n              - ecr:GetDownloadUrlForLayer\n            Condition:\n              StringLike:\n                aws:sourceArn:\n                  Fn::Sub: arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:*\n  FilePublishingRole:\n    Type: AWS::IAM::Role\n    Properties:\n      AssumeRolePolicyDocument:\n        Statement:\n          - Action: sts:AssumeRole\n            Effect: Allow\n            Principal:\n              AWS:\n                Ref: AWS::AccountId\n          - Fn::If:\n              - HasTrustedAccounts\n              - Action: sts:AssumeRole\n                Effect: Allow\n                Principal:\n                  AWS:\n                    Ref: TrustedAccounts\n              - Ref: AWS::NoValue\n      RoleName:\n        Fn::Sub: cdk-${Qualifier}-file-publishing-role-${AWS::AccountId}-${AWS::Region}\n      Tags:\n        - Key: aws-cdk:bootstrap-role\n          Value: file-publishing\n  ImagePublishingRole:\n    Type: AWS::IAM::Role\n    Properties:\n      AssumeRolePolicyDocument:\n        Statement:\n          - Action: sts:AssumeRole\n            Effect: Allow\n            Principal:\n              AWS:\n                Ref: AWS::AccountId\n          - Fn::If:\n              - HasTrustedAccounts\n              - Action: sts:AssumeRole\n                Effect: Allow\n                Principal:\n                  AWS:\n                    Ref: TrustedAccounts\n              - Ref: AWS::NoValue\n      RoleName:\n        Fn::Sub: cdk-${Qualifier}-image-publishing-role-${AWS::AccountId}-${AWS::Region}\n      Tags:\n        - Key: aws-cdk:bootstrap-role\n          Value: image-publishing\n  LookupRole:\n    Type: AWS::IAM::Role\n    Properties:\n      AssumeRolePolicyDocument:\n        Statement:\n          - Action: sts:AssumeRole\n            Effect: Allow\n            Principal:\n              AWS:\n                Ref: AWS::AccountId\n          - Fn::If:\n              - HasTrustedAccountsForLookup\n              - Action: sts:AssumeRole\n                Effect: Allow\n                Principal:\n                  AWS:\n                    Ref: TrustedAccountsForLookup\n              - Ref: AWS::NoValue\n          - Fn::If:\n              - HasTrustedAccounts\n              - Action: sts:AssumeRole\n                Effect: Allow\n                Principal:\n                  AWS:\n                    Ref: TrustedAccounts\n              - Ref: AWS::NoValue\n      RoleName:\n        Fn::Sub: cdk-${Qualifier}-lookup-role-${AWS::AccountId}-${AWS::Region}\n      ManagedPolicyArns:\n        - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/ReadOnlyAccess\n      Policies:\n        - PolicyDocument:\n            Statement:\n              - Sid: DontReadSecrets\n                Effect: Deny\n                Action:\n                  - kms:Decrypt\n                Resource: \"*\"\n            Version: \"2012-10-17\"\n          PolicyName: LookupRolePolicy\n      Tags:\n        - Key: aws-cdk:bootstrap-role\n          Value: lookup\n  FilePublishingRoleDefaultPolicy:\n    Type: AWS::IAM::Policy\n    Properties:\n      PolicyDocument:\n        Statement:\n          - Action:\n              - s3:GetObject*\n              - s3:GetBucket*\n              - s3:GetEncryptionConfiguration\n              - s3:List*\n              - s3:DeleteObject*\n              - s3:PutObject*\n              - s3:Abort*\n            Resource:\n              - Fn::Sub: ${StagingBucket.Arn}\n              - Fn::Sub: ${StagingBucket.Arn}/*\n            Effect: Allow\n          - Action:\n              - kms:Decrypt\n              - kms:DescribeKey\n              - kms:Encrypt\n              - kms:ReEncrypt*\n              - kms:GenerateDataKey*\n            Effect: Allow\n            Resource:\n              Fn::If:\n                - CreateNewKey\n                - Fn::Sub: ${FileAssetsBucketEncryptionKey.Arn}\n                - Fn::Sub: arn:${AWS::Partition}:kms:${AWS::Region}:${AWS::AccountId}:key/${FileAssetsBucketKmsKeyId}\n        Version: \"2012-10-17\"\n      Roles:\n        - Ref: FilePublishingRole\n      PolicyName:\n        Fn::Sub: cdk-${Qualifier}-file-publishing-role-default-policy-${AWS::AccountId}-${AWS::Region}\n  ImagePublishingRoleDefaultPolicy:\n    Type: AWS::IAM::Policy\n    Properties:\n      PolicyDocument:\n        Statement:\n          - Action:\n              - ecr:PutImage\n              - ecr:InitiateLayerUpload\n              - ecr:UploadLayerPart\n              - ecr:CompleteLayerUpload\n              - ecr:BatchCheckLayerAvailability\n              - ecr:DescribeRepositories\n              - ecr:DescribeImages\n              - ecr:BatchGetImage\n              - ecr:GetDownloadUrlForLayer\n            Resource:\n              Fn::Sub: ${ContainerAssetsRepository.Arn}\n            Effect: Allow\n          - Action:\n              - ecr:GetAuthorizationToken\n            Resource: \"*\"\n            Effect: Allow\n        Version: \"2012-10-17\"\n      Roles:\n        - Ref: ImagePublishingRole\n      PolicyName:\n        Fn::Sub: cdk-${Qualifier}-image-publishing-role-default-policy-${AWS::AccountId}-${AWS::Region}\n  DeploymentActionRole:\n    Type: AWS::IAM::Role\n    Properties:\n      AssumeRolePolicyDocument:\n        Statement:\n          - Action: sts:AssumeRole\n            Effect: Allow\n            Principal:\n              AWS:\n                Ref: AWS::AccountId\n          - Fn::If:\n              - HasTrustedAccounts\n              - Action: sts:AssumeRole\n                Effect: Allow\n                Principal:\n                  AWS:\n                    Ref: TrustedAccounts\n              - Ref: AWS::NoValue\n      Policies:\n        - PolicyDocument:\n            Statement:\n              - Sid: CloudFormationPermissions\n                Effect: Allow\n                Action:\n                  - cloudformation:CreateChangeSet\n                  - cloudformation:DeleteChangeSet\n                  - cloudformation:DescribeChangeSet\n                  - cloudformation:DescribeStacks\n                  - cloudformation:ExecuteChangeSet\n                  - cloudformation:CreateStack\n                  - cloudformation:UpdateStack\n                Resource: \"*\"\n              - Sid: PipelineCrossAccountArtifactsBucket\n                Effect: Allow\n                Action:\n                  - s3:GetObject*\n                  - s3:GetBucket*\n                  - s3:List*\n                  - s3:Abort*\n                  - s3:DeleteObject*\n                  - s3:PutObject*\n                Resource: \"*\"\n                Condition:\n                  StringNotEquals:\n                    s3:ResourceAccount:\n                      Ref: AWS::AccountId\n              - Sid: PipelineCrossAccountArtifactsKey\n                Effect: Allow\n                Action:\n                  - kms:Decrypt\n                  - kms:DescribeKey\n                  - kms:Encrypt\n                  - kms:ReEncrypt*\n                  - kms:GenerateDataKey*\n                Resource: \"*\"\n                Condition:\n                  StringEquals:\n                    kms:ViaService:\n                      Fn::Sub: s3.${AWS::Region}.amazonaws.com\n              - Action: iam:PassRole\n                Resource:\n                  Fn::Sub: ${CloudFormationExecutionRole.Arn}\n                Effect: Allow\n              - Sid: CliPermissions\n                Action:\n                  - cloudformation:DescribeStackEvents\n                  - cloudformation:GetTemplate\n                  - cloudformation:DeleteStack\n                  - cloudformation:UpdateTerminationProtection\n                  - sts:GetCallerIdentity\n                Resource: \"*\"\n                Effect: Allow\n              - Sid: CliStagingBucket\n                Effect: Allow\n                Action:\n                  - s3:GetObject*\n                  - s3:GetBucket*\n                  - s3:List*\n                Resource:\n                  - Fn::Sub: ${StagingBucket.Arn}\n                  - Fn::Sub: ${StagingBucket.Arn}/*\n              - Sid: ReadVersion\n                Effect: Allow\n                Action:\n                  - ssm:GetParameter\n                Resource:\n                  - Fn::Sub: arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter${CdkBootstrapVersion}\n            Version: \"2012-10-17\"\n          PolicyName: default\n      RoleName:\n        Fn::Sub: cdk-${Qualifier}-deploy-role-${AWS::AccountId}-${AWS::Region}\n      Tags:\n        - Key: aws-cdk:bootstrap-role\n          Value: deploy\n  CloudFormationExecutionRole:\n    Type: AWS::IAM::Role\n    Properties:\n      AssumeRolePolicyDocument:\n        Statement:\n          - Action: sts:AssumeRole\n            Effect: Allow\n            Principal:\n              Service: cloudformation.amazonaws.com\n        Version: \"2012-10-17\"\n      ManagedPolicyArns:\n        Fn::If:\n          - HasCloudFormationExecutionPolicies\n          - Ref: CloudFormationExecutionPolicies\n          - Fn::If:\n              - HasTrustedAccounts\n              - Ref: AWS::NoValue\n              - - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/AdministratorAccess\n      RoleName:\n        Fn::Sub: cdk-${Qualifier}-cfn-exec-role-${AWS::AccountId}-${AWS::Region}\n  CdkBootstrapVersion:\n    Type: AWS::SSM::Parameter\n    Properties:\n      Type: String\n      Name:\n        Fn::Sub: /cdk-bootstrap/${Qualifier}/version\n      Value: \"11\"\nOutputs:\n  BucketName:\n    Description: The name of the S3 bucket owned by the CDK toolkit stack\n    Value:\n      Fn::Sub: ${StagingBucket}\n  BucketDomainName:\n    Description: The domain name of the S3 bucket owned by the CDK toolkit stack\n    Value:\n      Fn::Sub: ${StagingBucket.RegionalDomainName}\n  FileAssetKeyArn:\n    Description: The ARN of the KMS key used to encrypt the asset bucket (deprecated)\n    Value:\n      Fn::If:\n        - CreateNewKey\n        - Fn::Sub: ${FileAssetsBucketEncryptionKey.Arn}\n        - Fn::Sub: ${FileAssetsBucketKmsKeyId}\n    Export:\n      Name:\n        Fn::Sub: CdkBootstrap-${Qualifier}-FileAssetKeyArn\n  ImageRepositoryName:\n    Description: The name of the ECR repository which hosts docker image assets\n    Value:\n      Fn::Sub: ${ContainerAssetsRepository}\n  BootstrapVersion:\n    Description: The version of the bootstrap resources that are currently mastered in this stack\n    Value:\n      Fn::GetAtt:\n        - CdkBootstrapVersion\n        - Value\n",
        "StagesAvailable": [
            "Original",
            "Processed"
        ],
        "ResponseMetadata": {}
    }
}